plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.appspell.sportintervaltimer"
        minSdk 30
        targetSdk 34
        versionCode 7
        versionName "0.55"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        kapt {
            correctErrorTypes = true
            javacOptions {
                option("-source", "17")
                option("-target", "17")
            }
        }
    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
        }
    }

    buildFeatures {
        compose true
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.5.11'
    }

    namespace 'com.appspell.sportintervaltimer'
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.23"

    // General compose dependencies
    implementation "androidx.activity:activity-compose:1.9.1"
    implementation "androidx.compose.ui:ui-tooling-preview:1.6.8"

    // Other compose dependencies
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

    // Compose for Wear OS Dependencies
    implementation "androidx.wear.compose:compose-material:1.3.1"

    // Foundation is additive, so you can use the mobile version in your Wear OS app.
    implementation "androidx.wear.compose:compose-foundation:1.3.1"

    // Wear specific Compose Dependencies
    implementation "androidx.wear.compose:compose-material:1.3.1"
    implementation "androidx.wear.compose:compose-foundation:1.3.1"

    // For navigation within your app...
    implementation "androidx.wear.compose:compose-navigation:1.3.1"
    implementation "androidx.navigation:navigation-fragment-ktx:2.7.7"

    // Hilt
    implementation "com.google.dagger:hilt-android:2.49"
    implementation "androidx.hilt:hilt-navigation-compose:1.2.0"
    implementation 'androidx.startup:startup-runtime:1.1.1'
    kapt "com.google.dagger:hilt-compiler:2.48"

    // Room
    implementation "androidx.room:room-runtime:2.6.1"
    kapt "androidx.room:room-compiler:2.6.1"

    // Time
    implementation 'net.danlew:android.joda:2.12.0'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:33.1.2')
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:33.1.2')

    // Add the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-perf-ktx'

    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'com.google.android.gms:play-services-wearable:18.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.wear:wear:1.3.0'

    // Testing
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.2.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.6.1"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.6.8"
    debugImplementation "androidx.compose.ui:ui-tooling:1.6.8"
}

kapt {
    correctErrorTypes true
}